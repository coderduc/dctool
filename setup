#!/bin/bash
# Coloring
NOCOLOR='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTGRAY='\033[0;37m'
DARKGRAY='\033[1;30m'
LIGHTRED='\033[1;31m'
LIGHTGREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHTBLUE='\033[1;34m'
LIGHTPURPLE='\033[1;35m'
LIGHTCYAN='\033[1;36m'
WHITE='\033[1;37m'

# Define rainbow color code
colors=(
    "\033[31m"  # Red
    "\033[33m"  # Yellow
    "\033[32m"  # Green
    "\033[36m"  # Cyan
    "\033[34m"  # Blue
    "\033[35m"  # Magenta
)
# Reset color
reset="\033[0m"

# Function to print rainbow-colored text
rainbow() {
    local text="$1"
    local i
    local text_length=${#text}

    for ((i=0; i<text_length; i++)); do
        color_index=$((i % ${#colors[@]}))
        printf "${colors[$color_index]}${text:$i:1}"
    done
    printf "$reset\n"
}
clear
rainbow "=========================================="
echo -e "${LIGHTRED}██████╗  ██████╗███╗   ███╗ ██████╗ ██████╗ "
echo -e "${LIGHTRED}██╔══██╗██╔════╝████╗ ████║██╔═══██╗██╔══██╗"
echo -e "${LIGHTRED}██║  ██║██║     ██╔████╔██║██║   ██║██║  ██║"
echo -e "${WHITE}██║  ██║██║     ██║╚██╔╝██║██║   ██║██║  ██║"
echo -e "${WHITE}██████╔╝╚██████╗██║ ╚═╝ ██║╚██████╔╝██████╔╝"
echo -e "${WHITE}╚═════╝  ╚═════╝╚═╝     ╚═╝ ╚═════╝ ╚═════╝ "
rainbow "=========================================="
printf "
"
echo -e "${LIGHTRED}𝐃𝐂𝐓𝐎𝐎𝐋 𝐕𝟔${NOCOLOR}"
echo -e "${LIGHTBLUE}𝐓𝐄𝐋𝐄𝐆𝐑𝐀𝐌 𝐂𝐇𝐀𝐍𝐍𝐄𝐋 𝐃𝐂𝐌𝐎𝐃𝐏𝐔𝐁𝐆${NOCOLOR}"
echo -e "${YELLOW}𝐂𝐨𝐧𝐭𝐚𝐜𝐭: @𝐝𝐮𝐧𝐠𝟔𝟒𝟏𝟎 𝐨𝐫 @𝐠𝟒𝐠𝐥𝐢𝐭𝐜𝐡𝐞𝐫${NOCOLOR}"
echo -e "Executing: ${LIGHTGREEN}SETUP${NOCOLOR}"
echo "-----------------------"

# Setup directory for Requirements
quickbms_dir=$PREFIX/share/quickbms

function redirect {
 echo -e "${LIGHTGREEN}STARTING DCTOOL${NOCOLOR}"
 echo -ne '#####                     (33%)\r'
 sleep 1
 echo -ne '#############             (66%)\r'
 sleep 1
 echo -ne '#######################   (100%)\r'
 echo -ne '\n'
 bash dctool
}

function quickbms_check {
  echo -e "${YELLOW}Checking required program..${NOCOLOR}"
  FILE=$quickbms_dir/quickbms
  if [ -f "$FILE" ]; then
      echo -e "${LIGHTGREEN}Program has been installed.${NOCOLOR}"
      redirect
  else 
      echo -e "${RED}PROGRAM NOT FOUND.${NOCOLOR}"
      quickbms_install
      redirect
  fi
}

function quickbms_install {
  echo -e "${LIGHTGREEN}Installing required program..${NOCOLOR}"
  
  # Download and unzip
  wget -q http://aluigi.altervista.org/papers/quickbms_linux.zip
  if [ $? -ne 0 ]; then
      echo -e "${RED}Failed to download quickbms_linux.zip${NOCOLOR}"
      exit 1
  fi
  
  sleep 1
  unzip -qq quickbms_linux.zip
  if [ $? -ne 0 ]; then
      echo -e "${RED}Failed to unzip quickbms_linux.zip${NOCOLOR}"
      exit 1
  fi
  
  # Ensure the destination directory exists
  mkdir -p $quickbms_dir
  if [ $? -ne 0 ]; then
      echo -e "${RED}Failed to create directory $quickbms_dir${NOCOLOR}"
      exit 1
  fi

  # Check if files are extracted
  if [ ! -f "quickbms_4gb_files" ] || [ ! -f "quickbms" ]; then
      echo -e "${RED}Required files not found after unzip.${NOCOLOR}"
      exit 1
  fi

  chmod +x quickbms_4gb_files
  chmod +x quickbms
  sleep 1
  
  # Copy files with verification
  cp -rf quickbms_4gb_files $quickbms_dir/
  if [ $? -ne 0 ]; then
      echo -e "${RED}Failed to copy quickbms_4gb_files${NOCOLOR}"
      exit 1
  fi
  
  cp -rf quickbms $quickbms_dir/
  if [ $? -ne 0 ]; then
      echo -e "${RED}Failed to copy quickbms${NOCOLOR}"
      exit 1
  fi

  chmod +x dctool
  sleep 1
  
  # Clean up
  rm -rf quickbms_linux.zip quickbms_4gb_files quickbms
}

#Checking Required Pakcages
echo -e "${YELLOW}Checking Required packages${NOCOLOR}"

packages=("wget" "zip" "unzip" "curl" "x11-repo" "qemu-system-i386" "qemu-user-i386" "jq")

for pkg in ${packages[@]}; do

    is_pkg_installed=$(dpkg-query -W --showformat='${Status}\n' ${pkg} | grep "install ok installed")

    if [ "${is_pkg_installed}" == "install ok installed" ]; then
        echo -e ${GREEN}${pkg}${NOCOLOR} is installed.
    else [ "" = "${is_pkg_installed}" ];
     echo -e "${RED}No ${pkg}. Setting up ${pkg}.${NOCOLOR}" 
    pkg install ${pkg} -y
    fi
done
quickbms_check
